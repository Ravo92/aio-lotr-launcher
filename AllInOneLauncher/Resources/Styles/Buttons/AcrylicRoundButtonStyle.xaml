<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:elements="clr-namespace:AllInOneLauncher.Elements">
    <Style x:Key="AcrylicRoundButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="15,10,15,10"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="ButtonGrid" RenderTransformOrigin="0.5,0.5">
                        <Border x:Name="border_background" CornerRadius="20">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="8" ShadowDepth="3" Opacity="0.3" Direction="270" Color="#FF373737"/>
                            </Border.Effect>
                            <Border.OpacityMask>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Border Background="Black" SnapsToDevicePixels="True" CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType=Border}}" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Border}}" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Border}}"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Border.OpacityMask>
                            <elements:Acrylic/>
                        </Border>
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="20" BorderThickness="0" SnapsToDevicePixels="true"/>
                        <Grid>
                            <Grid.OpacityMask>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Border Background="Black" SnapsToDevicePixels="True" CornerRadius="{Binding ElementName=border_background, Path=CornerRadius}" Width="{Binding ElementName=border_background, Path=ActualWidth}" Height="{Binding ElementName=border_background, Path=ActualHeight}"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Grid.OpacityMask>
                            <Grid Background="Transparent">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#26FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#26FFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>